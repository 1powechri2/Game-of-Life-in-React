[{"/Users/dada/Desktop/EVERYTHING/codeSmells/reactGameOfLife/game-of-life/src/game_of_life.js":"1","/Users/dada/Desktop/EVERYTHING/codeSmells/reactGameOfLife/game-of-life/src/index.js":"2"},{"size":2111,"mtime":1609602223538,"results":"3","hashOfConfig":"4"},{"size":1655,"mtime":1609896022336,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"8"},"68zg63",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dada/Desktop/EVERYTHING/codeSmells/reactGameOfLife/game-of-life/src/game_of_life.js",["11","12","13","14","15","16","17","18","19","20","21","22","23"],"class GameOfLife {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n\n  world () {\n    var world = [];\n    var i, j;\n    for(i = 0; i < this.height; i++) {\n      world[i] = new Array\n      let j = 0;\n      for(j = 0; j < this.width; j++){\n        world[i][j] = Math.round(Math.random());\n      };\n    };\n    return world;\n  };\n\n  emptyWorld () {\n    var emptyWorld = [];\n    var i, j;\n    for(i = 0; i < this.height; i++) {\n      emptyWorld[i] = new Array\n      for(j = 0; j < this.width; j++){\n        emptyWorld[i][j] = null;\n      };\n    };\n    return emptyWorld;\n  }\n\n  checkBoundaries(val1, val2) {\n    if (val1 == -1) {\n      return val2 -1;\n    }\n    else if (val1 == val2) {\n      return 0;\n    }\n    else {\n      return val1;\n    }\n  }\n\n  cellVal (row, col, world) {\n    var columnLength = world.length;\n    var rowLength = world[0].length;\n    var i = this.checkBoundaries(row, columnLength);\n    var j = this.checkBoundaries(col, rowLength);\n    return world[i][j];\n  }\n\n  neighborsCount (row, col, world) {\n    var i, j;\n    var stopI = row +1;\n    var stopJ = col +1;\n    var fitness = 0;\n    var me = this.cellVal(row,col,world);\n    for (i=row-1; i<=stopI; i++) {\n      for (j=col-1; j<=stopJ; j++) {\n        fitness= fitness + this.cellVal(i, j, world)\n      }\n    }\n    fitness = fitness - me\n    return fitness;\n  }\n\n  checkEvolution (status, neighbors) {\n    if (status == 1 && (neighbors == 2 || neighbors == 3)) {\n      return 'Live';\n    }\n    else if (status == 0 && neighbors == 3) {\n      return 'Live';\n    }\n    else {\n      return 'Dead';\n    }\n  }\n\n  readWorld (world) {\n    var i, j;\n    var nextGen = this.emptyWorld()\n    for (i=0; i<world.length; i++) {\n      for (j=0;j<world[i].length;j++) {\n        var status = this.cellVal(i,j,world)\n        var neighbors = this.neighborsCount(i,j,world)\n        var life = this.checkEvolution(status, neighbors)\n        if (life == 'Live') {\n          nextGen[i][j] = 1\n        }\n        else (\n          nextGen[i][j] = 0\n        )\n      }\n    }\n    return nextGen;\n  }\n}\n\nmodule.exports = GameOfLife;\n","/Users/dada/Desktop/EVERYTHING/codeSmells/reactGameOfLife/game-of-life/src/index.js",["24","25"],{"ruleId":"26","severity":1,"message":"27","line":9,"column":12,"nodeType":"28","messageId":"29","endLine":9,"endColumn":13},{"ruleId":"30","severity":1,"message":"31","line":11,"column":18,"nodeType":"32","messageId":"33","endLine":11,"endColumn":27,"fix":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":18,"nodeType":"32","messageId":"37","endLine":11,"endColumn":27},{"ruleId":"30","severity":1,"message":"31","line":24,"column":23,"nodeType":"32","messageId":"33","endLine":24,"endColumn":32,"fix":"38"},{"ruleId":"35","severity":1,"message":"36","line":24,"column":23,"nodeType":"32","messageId":"37","endLine":24,"endColumn":32},{"ruleId":"39","severity":1,"message":"40","line":33,"column":14,"nodeType":"41","messageId":"42","endLine":33,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":36,"column":19,"nodeType":"41","messageId":"42","endLine":36,"endColumn":21},{"ruleId":"39","severity":1,"message":"40","line":68,"column":16,"nodeType":"41","messageId":"42","endLine":68,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":68,"column":35,"nodeType":"41","messageId":"42","endLine":68,"endColumn":37},{"ruleId":"39","severity":1,"message":"40","line":68,"column":53,"nodeType":"41","messageId":"42","endLine":68,"endColumn":55},{"ruleId":"39","severity":1,"message":"40","line":71,"column":21,"nodeType":"41","messageId":"42","endLine":71,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":71,"column":39,"nodeType":"41","messageId":"42","endLine":71,"endColumn":41},{"ruleId":"39","severity":1,"message":"40","line":87,"column":18,"nodeType":"41","messageId":"42","endLine":87,"endColumn":20},{"ruleId":"26","severity":1,"message":"43","line":7,"column":7,"nodeType":"28","messageId":"29","endLine":7,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":38,"column":13,"nodeType":"41","messageId":"42","endLine":38,"endColumn":15},"no-unused-vars","'j' is defined but never used.","Identifier","unusedVar","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"44","text":"45"},"no-array-constructor","The array literal notation [] is preferable.","preferLiteral",{"range":"46","text":"45"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'glider' is assigned a value but never used.",[217,217],"()",[490,490]]